#EXP7 HTTP Request :

// App.js
import React, { useState, useEffect } from 'react';
import axios from 'axios';

function App() {
  const [users, setUsers] = useState([]);
  const [newUser, setNewUser] = useState('');
  const [editUserId, setEditUserId] = useState(null);

  // Fetch users from API
  const fetchUsers = async () => {
    try {
      const response = await axios.get('/users'); // Replace with your actual API endpoint
      setUsers(response.data);
    } catch (error) {
      console.error('Error fetching users:', error);
    }
  };

  useEffect(() => {
    fetchUsers();
  }, []);

  // Handle input change
  const handleChange = (event) => {
    setNewUser(event.target.value);
  };

  // Add new user
  const addUser = async () => {
    try {
      const response = await axios.post('/users', { name: newUser }); // Replace with your actual API endpoint
      setUsers([...users, response.data]);
      setNewUser('');
    } catch (error) {
      console.error('Error adding user:', error);
    }
  };

  // Edit user
  const startEdit = (user) => {
    setEditUserId(user.id);
    setNewUser(user.name);
  };

  // Update user
  const updateUser = async () => {
    try {
      const response = await axios.put(`/users/${editUserId}`, { name: newUser }); // Replace with your actual API endpoint
      setUsers(users.map(user => (user.id === editUserId ? response.data : user)));
      setEditUserId(null);
      setNewUser('');
    } catch (error) {
      console.error('Error updating user:', error);
    }
  };

  // Delete user
  const deleteUser = async (id) => {
    try {
      await axios.delete(`/users/${id}`); // Replace with your actual API endpoint
      setUsers(users.filter(user => user.id !== id));
    } catch (error) {
      console.error('Error deleting user:', error);
    }
  };

  return (
    <div>
      <h2>{editUserId ? 'Update Method:' : 'Post Method:'}</h2>
      <input
        type="text"
        placeholder="User name"
        value={newUser}
        onChange={handleChange}
      />
      <button onClick={editUserId ? updateUser : addUser}>
        {editUserId ? 'Update User' : 'Add User'}
      </button>

      <ul>
        {users.map((user) => (
          <li key={user.id}>
            {user.name}{' '}
            <button onClick={() => startEdit(user)}>Edit</button>{' '}
            <button onClick={() => deleteUser(user.id)}>Delete</button>
          </li>
        ))}
      </ul>
    </div>
  );
}

export default App;
